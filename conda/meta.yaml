{% set pyproject = load_file_data('../pyproject.toml', from_recipe_dir=True) %}
{% set name = pyproject.get('project').get('name') %}
{% set description = pyproject.get('project').get('description') %}
{% set version = GIT_DESCRIBE_TAG | replace("v", "") %}
{% set license = pyproject.get('project').get('license') %}
{% set home = pyproject.get('project', {}).get('urls', {}).get('Homepage', '') %}
{% set build_deps = pyproject.get("build-system", {}).get("requires", []) %}
{% set deps = pyproject.get('project', {}).get('dependencies', []) %}
{% set conda_deps = pyproject.get('tool', {}).get('conda-environment', {}).get('dependencies',[]) %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  path: ..

build:
  noarch: python
  number: 0
  preserve_egg_dir: True
  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-build-isolation -vv

requirements:
  host:
    - python
    {% for dep in build_deps %}
    - {{ dep }}
    {% endfor  %}
  build:
    - python
    {% for dep in build_deps %}
    - {{ dep }}
    {% endfor  %}
    - {{ compiler('fortran') }}  # [not win]
    - m2w64-gcc-fortran           # [win]
    - {{ compiler('c') }}
    #- compilers
    - {{ native }}toolchain   # [win]
    - charset-normalizer
  run:
    - python
    {% for dep in deps + conda_deps %}
    - {{ dep }}
    {% endfor %}
    - {{ native }}toolchain   # [win]
    - {{ pin_compatible('numpy') }}
    - charset-normalizer

test:
  requires:
    - pytest
    - nbmake
  imports:
    - {{ name }}
#  source_files:
#    - test/test_*.py
#    - doc/notebooks/*.ipynb
  commands:
   - pytest -v
   - pytest --nbmake

about:
  home: {{ home }}
  license: {{ license }}
  summary: {{ description }}

extra:
  recipe-maintainers:
    - pradal
    - baugetfa
